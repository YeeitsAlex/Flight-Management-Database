/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


package testdb;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;

/**
 *
 * @author AlexYeeeeee
 */
public class AvailableSeats extends javax.swing.JFrame {

    /**
     * Creates new form AvailableSeats
     */
    public AvailableSeats() {
        initComponents();
        setDefaultCloseOperation(AddTechnician.EXIT_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("WindowClosingDemo.windowClosing");
                NewJFrame.cleanup();
                System.exit(0);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Confirm = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FlightNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Date = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 15)); // NOI18N
        jLabel1.setText("List Available Seats");

        jLabel2.setText("Flight Number");

        jLabel3.setText("Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Cancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Confirm)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FlightNumber)
                            .addComponent(Date, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(FlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirm)
                    .addComponent(Cancel))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        //Might be better to declare in main, will determine during testing
        int seats_avail = 0; 
        try{
           
           date = Date.getText();
           
           
           int num_sold = 0;
           int row_count = 0;
           int row_count2 = 0;

           String fID_query = "SELECT * FROM Flight WHERE fnum = ";

           try{
               fID = Integer.parseInt(FlightNumber.getText());
               fID_query += String.valueOf(fID);
               //Check concatenated query
               //System.out.println(custID_query);
               //break;
           }catch (Exception e){
               JOptionPane.showMessageDialog(null, "Input is invalid");
               //continue;
           }
           try{
               //Since pilot ID is unique from sequence, row_count should always = 1 when exists
               row_count = NewJFrame.esql.executeQuery(fID_query);
               //Check row_count value
               //System.out.println(row_count);
           } catch(SQLException e){
               JOptionPane.showMessageDialog(null,e.getMessage());
           }
           if (row_count <= 0){
               JOptionPane.showMessageDialog(null, "Error!! You entered a Flight that does not exist!");
           }
           
           String SQL = "SELECT foo.seats - foo.num_sold FROM (SELECT P.seats, F.num_sold FROM Plane P, Flight F, FlightInfo FI WHERE F.fnum = " + String.valueOf(fID) + " AND FI.flight_id = F.fnum AND P.id = FI.plane_id) as foo";

		try{
                    String val = "";
                    List<List<String>> tmp = NewJFrame.esql.executeQueryAndReturnResult(SQL);

                    for (int i = 0; i < tmp.size(); i++){
                            for (int j = 0; j < tmp.get(i).size(); j++){
                                    val = tmp.get(i).get(j);
                            }
                    }
                    //System.out.println("Seats Available for flight " + String.valueOf(fID) + ": " + val );
                    seats_avail = Integer.parseInt(val);
		}catch (SQLException e){
                    JOptionPane.showMessageDialog(null,e.getMessage());
		}
                

           if(row_count > 0 ){
               String Seat_query = "SELECT foo.seats - foo.num_sold FROM (SELECT P.seats, F.num_sold FROM Plane P, Flight F, FlightInfo FI WHERE F.fnum = " + String.valueOf(fID) + " AND FI.flight_id = F.fnum AND P.id = FI.plane_id) as foo"; 
                    try{
			String val = "";
			List<List<String>> tmp = NewJFrame.esql.executeQueryAndReturnResult(SQL);

			for (int i = 0; i < tmp.size(); i++){
				for (int j = 0; j < tmp.get(i).size(); j++){
					val = tmp.get(i).get(j);
				}
			}
			JOptionPane.showMessageDialog(null,("Seats Available for flight " + String.valueOf(fID) + ": " + tmp.get(0).get(0)));
		}catch (SQLException e){
			System.err.println (e.getMessage());
		}
           }
          
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "Problem with your input, please try again.");
        }
    }//GEN-LAST:event_ConfirmActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        homeScreen();
    }//GEN-LAST:event_CancelActionPerformed

    public void setPrevFrame(JFrame frame){
        this.frame = frame;
    }
    
    public void homeScreen(){
        setVisible(false);
        this.frame.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableSeats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableSeats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableSeats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableSeats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvailableSeats().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Confirm;
    private javax.swing.JTextField Date;
    private javax.swing.JTextField FlightNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
    private JFrame frame;
    public int fID = 0;
    public String date = "";
}
