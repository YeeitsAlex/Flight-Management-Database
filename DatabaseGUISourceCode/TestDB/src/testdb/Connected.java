/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package testdb;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.util.List;
import javax.swing.JTable;
import javax.swing.*; 


/**
 *
 * @author AlexYeeeeee
 */
public class Connected extends javax.swing.JFrame {

    /**
     * Creates new form Connected
     */
    public Connected() {
        initComponents();
        setDefaultCloseOperation(Connected.EXIT_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("WindowClosingDemo.windowClosing");
                NewJFrame.cleanup();
                System.exit(0);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        addFlight = new javax.swing.JButton();
        addPlane = new javax.swing.JButton();
        addPilot = new javax.swing.JButton();
        addTechnician = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        BookFlight = new javax.swing.JButton();
        AvailableSeats = new javax.swing.JButton();
        RepairsPerYear = new javax.swing.JButton();
        NumRepairsDescending = new javax.swing.JButton();
        TotalPassangersWithSameStatus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setText("Flight Management System");

        addFlight.setText("Add Flight");
        addFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightActionPerformed(evt);
            }
        });

        addPlane.setText("Add Plane");
        addPlane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaneActionPerformed(evt);
            }
        });

        addPilot.setText("Add Pilot");
        addPilot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPilotActionPerformed(evt);
            }
        });

        addTechnician.setText("Add Technician");
        addTechnician.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTechnicianActionPerformed(evt);
            }
        });

        ExitButton.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        BookFlight.setText("Book Flight");
        BookFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookFlightActionPerformed(evt);
            }
        });

        AvailableSeats.setText("List number of available seats for a given flight");
        AvailableSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvailableSeatsActionPerformed(evt);
            }
        });

        RepairsPerYear.setText("List total number of repairs per year in ascending order");
        RepairsPerYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepairsPerYearActionPerformed(evt);
            }
        });

        NumRepairsDescending.setText("List total number of repairs per plane in descending order");
        NumRepairsDescending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumRepairsDescendingActionPerformed(evt);
            }
        });

        TotalPassangersWithSameStatus.setText("Find total number of passangers with a given status");
        TotalPassangersWithSameStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalPassangersWithSameStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(addPilot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BookFlight))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(ExitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addFlight)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTechnician)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlane)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AvailableSeats)
                    .addComponent(NumRepairsDescending)
                    .addComponent(TotalPassangersWithSameStatus)
                    .addComponent(RepairsPerYear))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTechnician)
                    .addComponent(addPlane)
                    .addComponent(addFlight)
                    .addComponent(AvailableSeats))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalPassangersWithSameStatus)
                    .addComponent(addPilot)
                    .addComponent(BookFlight))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NumRepairsDescending)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RepairsPerYear))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(ExitButton)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightActionPerformed
        // TODO add your handling code here:
        //ADD FLIGHT BUTTON
        AddFlight af = new AddFlight();
        
        af.setPrevFrame(this);
        af.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_addFlightActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        // EXIT BUTTON
        NewJFrame.cleanup();
        System.exit(1);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void addPilotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPilotActionPerformed
        // TODO add your handling code here:
        AddPilot ap = new AddPilot();
        ap.setPrevFrame(this);
        ap.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_addPilotActionPerformed

    private void addPlaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaneActionPerformed
        // TODO add your handling code here:
        AddPlane ap = new AddPlane();
        
        ap.setPrevFrame(this);
        ap.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_addPlaneActionPerformed

    private void addTechnicianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTechnicianActionPerformed
        // TODO add your handling code here:
        AddTechnician aT = new AddTechnician();
        aT.setPrevFrame(this);
        aT.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_addTechnicianActionPerformed

    private void BookFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookFlightActionPerformed
        // TODO add your handling code here:
        BookFlight bF = new BookFlight();
        bF.setPrevFrame(this);
        bF.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_BookFlightActionPerformed

    private void AvailableSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvailableSeatsActionPerformed
        // TODO add your handling code here:
        AvailableSeats aS = new AvailableSeats();
        aS.setPrevFrame(this);
        aS.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_AvailableSeatsActionPerformed

    private void NumRepairsDescendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumRepairsDescendingActionPerformed
        // TODO add your handling code here:

        try {
            String query= "SELECT R.plane_id, COUNT(R.rid) FROM Repairs R GROUP BY R.plane_id ORDER BY COUNT(R.rid) DESC";
            
            
            List<List<String>> l = NewJFrame.esql.executeQueryAndReturnResult(query);
            int numrows = l.size();
            int numcols = l.get(0).size();
            Object[][] rows = new Object[numrows][numcols];
            for (int i =0; i<numrows; i++){
                for (int j = 0; j< numcols; j++){
                    rows[i][j] = l.get(i).get(j);
                }
            }
            Object[] cols = {"Plane ID", "Number of Repairs"};
            table = new JTable(rows, cols);
            JOptionPane.showMessageDialog(null, new JScrollPane(table));
          } catch (Exception e) {
            // TODO: handle exception
              JOptionPane.showMessageDialog(null,e.getMessage());
          }
        
    }//GEN-LAST:event_NumRepairsDescendingActionPerformed

    private void TotalPassangersWithSameStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalPassangersWithSameStatusActionPerformed
        // TODO add your handling code here:
        TotalPassangers tP = new TotalPassangers();
        tP.setPrevFrame(this);
        tP.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_TotalPassangersWithSameStatusActionPerformed

    private void RepairsPerYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepairsPerYearActionPerformed
        // TODO add your handling code here:
        try {
            String query = "SELECT EXTRACT(YEAR FROM R.repair_date), COUNT(R.rid) FROM Repairs R GROUP BY EXTRACT(YEAR FROM R.repair_date) ORDER BY COUNT(R.rid) ASC";
            
            
            List<List<String>> l = NewJFrame.esql.executeQueryAndReturnResult(query);
            int numrows = l.size();
            int numcols = l.get(0).size();
            Object[][] rows = new Object[numrows][numcols];
            for (int i =0; i<numrows; i++){
                for (int j = 0; j< numcols; j++){
                    rows[i][j] = l.get(i).get(j);
                }
            }
            Object[] cols = {"Year", "Number of Repairs"};
            table = new JTable(rows, cols);
            JOptionPane.showMessageDialog(null, new JScrollPane(table));
            
          } catch (Exception e) {
            // TODO: handle exception
              JOptionPane.showMessageDialog(null,e.getMessage());
          }
        
    }//GEN-LAST:event_RepairsPerYearActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connected.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connected.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connected.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connected.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connected().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AvailableSeats;
    private javax.swing.JButton BookFlight;
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton NumRepairsDescending;
    private javax.swing.JButton RepairsPerYear;
    private javax.swing.JButton TotalPassangersWithSameStatus;
    private javax.swing.JButton addFlight;
    private javax.swing.JButton addPilot;
    private javax.swing.JButton addPlane;
    private javax.swing.JButton addTechnician;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    private JTable table; 
    private JScrollPane scrollPane = new JScrollPane();
    private JFrame mainframe;
}
