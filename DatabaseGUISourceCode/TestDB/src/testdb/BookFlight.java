/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package testdb;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;

/**
 *
 * @author AlexYeeeeee
 */
public class BookFlight extends javax.swing.JFrame {

    /**
     * Creates new form BookFlight
     */
    public BookFlight() {
        initComponents();
        setDefaultCloseOperation(AddTechnician.EXIT_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.out.println("WindowClosingDemo.windowClosing");
                NewJFrame.cleanup();
                System.exit(0);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CustomerID = new javax.swing.JTextField();
        FlightNumber = new javax.swing.JTextField();
        Confirm = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel1.setText("Book Flight");

        jLabel2.setText("Customer ID");

        jLabel3.setText("Flight Number");

        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(47, 47, 47)
                                .addComponent(FlightNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(58, 58, 58)
                                .addComponent(CustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cancel)
                            .addComponent(jLabel4))))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Confirm)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(145, 145, 145))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FlightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirm)
                    .addComponent(Cancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        int seats_avail = 0; 
        try{
           //Pretty sure wrong placement for this
           //fID = Integer.parseInt(FlightNumber.getText());
           
           int num_sold = 0;
           int row_count = 0;
           int row_count2 = 0;

           String custID_query = "SELECT * FROM Customer WHERE id = ";

           try{
               custID = Integer.parseInt(CustomerID.getText());
               custID_query += String.valueOf(custID);
               //Check concatenated query
               //System.out.println(custID_query);
               //break;
           }catch (Exception e){
               JOptionPane.showMessageDialog(null, "Input is invalid");
               //continue;
           }
           try{
               //Since pilot ID is unique from sequence, row_count should always = 1 when exists
               row_count = NewJFrame.esql.executeQuery(custID_query);
               //Check row_count value
               //System.out.println(row_count);
           } catch(SQLException e){
               JOptionPane.showMessageDialog(null,e.getMessage());
           }
           if (row_count <= 0){
               JOptionPane.showMessageDialog(null, "You entered a customer that does not exist!");
           }
           
           String fID_query = "SELECT * FROM Flight WHERE fnum = ";

           try{
               fID = Integer.parseInt(FlightNumber.getText());
               fID_query += String.valueOf(fID);
               //Check concatenated query
               //System.out.println(fID_query);

           }catch (Exception e){
               JOptionPane.showMessageDialog(null, "Input is invalid");

           }

           try{
               row_count2 = NewJFrame.esql.executeQuery(fID_query);
               //Check row_count value
               //System.out.println(row_count);
           } catch(SQLException e){
               System.err.println (e.getMessage());
           }
           if (row_count2 <= 0){
               JOptionPane.showMessageDialog(null, "You entered a flight that does not exist!");
           }

           String SQL = "SELECT foo.seats - foo.num_sold FROM (SELECT P.seats, F.num_sold FROM Plane P, Flight F, FlightInfo FI WHERE F.fnum = " + String.valueOf(fID) + " AND FI.flight_id = F.fnum AND P.id = FI.plane_id) as foo";

		try{
                    String val = "";
                    List<List<String>> tmp = NewJFrame.esql.executeQueryAndReturnResult(SQL);

                    for (int i = 0; i < tmp.size(); i++){
                            for (int j = 0; j < tmp.get(i).size(); j++){
                                    val = tmp.get(i).get(j);
                            }
                    }
                    //System.out.println("Seats Available for flight " + String.valueOf(fID) + ": " + val );
                    seats_avail = Integer.parseInt(val);
		}catch (SQLException e){
                    JOptionPane.showMessageDialog(null,e.getMessage());
		}
                
                if(seats_avail > 0){
                    status = "R";
		}
		else{
                    status = "W";
		}

           if(row_count > 0 && row_count2 > 0){
               try{
                   String BookFlight_query = "INSERT INTO Reservation VALUES(nextval(\'res_seq\')," +  String.valueOf(custID) + "," + String.valueOf(fID) + ",\'" + status + "\')";
                   
                   try{
                       NewJFrame.esql.executeUpdate(BookFlight_query);
                   } catch(SQLException e){
                       JOptionPane.showMessageDialog(null,e.getMessage());
                   }
                   
                    if(status == "R"){
                        String UpdateNumSold_query = "UPDATE Flight SET num_sold = num_sold + 1 WHERE fnum =" + String.valueOf(fID);
                        try{
                            NewJFrame.esql.executeUpdate(UpdateNumSold_query);
                            homeScreen();
                        } catch(SQLException e){
                            JOptionPane.showMessageDialog(null,e.getMessage());
                        }
                   }
               }catch(Exception e){
                  JOptionPane.showMessageDialog(null,e.getMessage());
               }
           }
          
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "Problem with your input, please try again.");
        }
        
    }//GEN-LAST:event_ConfirmActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        homeScreen();
    }//GEN-LAST:event_CancelActionPerformed
    
    public void setPrevFrame(JFrame frame){
        this.frame = frame;
    }
    
    public void homeScreen(){
        setVisible(false);
        this.frame.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookFlight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Confirm;
    private javax.swing.JTextField CustomerID;
    private javax.swing.JTextField FlightNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
    public int custID = 0, fID = 0;
    public String status = ""; 
    private JFrame frame;
}
